FROM node:20 AS builder

WORKDIR /app

# Install build dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    python3 \
    make \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# Copy package files
COPY package*.json ./

# Install dependencies with explicit bcrypt rebuild
RUN npm ci --build-from-source=bcrypt

# Copy source code
COPY . .

# Add explicit tsconfig copy if it doesn't exist
RUN if [ ! -f tsconfig.json ]; then \
    echo '{"compilerOptions":{"module":"commonjs","declaration":true,"removeComments":true,"emitDecoratorMetadata":true,"experimentalDecorators":true,"target":"es2017","sourceMap":true,"outDir":"./dist","baseUrl":"./","incremental":true}}' > tsconfig.json; \
    fi

# Build the application
RUN npm run build
RUN ls -la dist

# Production image
FROM node:20 AS runner

WORKDIR /app

ENV NODE_ENV=production

# Install build tools for bcrypt in the runner stage
RUN apt-get update && apt-get install -y \
    build-essential \
    python3 \
    make \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# Copy package files first
COPY package*.json ./

# Install production dependencies and rebuild bcrypt
RUN npm ci --only=production --build-from-source=bcrypt

# Copy application files
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/tsconfig.json ./tsconfig.json
RUN if [ -f /app/tsconfig.build.json ]; then cp /app/tsconfig.build.json ./tsconfig.build.json; fi

# Debug to verify files
RUN ls -la dist

EXPOSE 3001

# Use node to run the application directly
CMD ["node", "dist/src/main.js"]
